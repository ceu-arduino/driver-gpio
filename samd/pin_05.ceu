#include "gpio.ceu"

input high/low PIN_05;

#define GPIO_SAMD_PIN_05      15
#define GPIO_SAMD_PIN_05_MASK (1<<GPIO_SAMD_PIN_05)

{
    ceu_assert(GPIO_SAMD_PIN_05 == EXTERNAL_INT_15, "bug found");
    ceu_assert(EXTERNAL_INT_15 > EXTERNAL_INT_7,    "bug found");
    ceu_assert((GPIO_SAMD_PIN_05 & 1) == 1,         "bug found");

    pinMode(5, INPUT_PULLDOWN);

    // variants/arduino_zero/variant.cpp
    //  Port, Pin, PinType,     PinAttribute,       ADCChannelN,    PWMChannel, TCCChannel,   ExtInt
    //{ PORTA, 15, PIO_TIMER, (PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER), No_ADC_Channel, PWM3_CH1, TC3_CH1, EXTERNAL_INT_15 }, // TC3/WO[1]

    EIC->WAKEUP.reg |= (GPIO_SAMD_PIN_05_MASK);
    {
        u32 tmp = (PORT->Group[PORTA].PMUX[GPIO_SAMD_PIN_05 >> 1].reg) & PORT_PMUX_PMUXE(0xF) ;
        PORT->Group[PORTA].PMUX[GPIO_SAMD_PIN_05 >> 1].reg = tmp|PORT_PMUX_PMUXO(PIO_EXTINT) ;
        PORT->Group[PORTA].PINCFG[GPIO_SAMD_PIN_05].reg |= PORT_PINCFG_PMUXEN ;
    }
    {
        u32 config = 1;
        u32 pos = (GPIO_SAMD_PIN_05 - 8) << 2;
        EIC->CONFIG[config].reg &=~ (EIC_CONFIG_SENSE0_Msk << pos);
        EIC->CONFIG[config].reg |= EIC_CONFIG_SENSE0_BOTH_Val << pos;
    }
    EIC->INTENSET.reg = EIC_INTENSET_EXTINT(GPIO_SAMD_PIN_05_MASK);
}
