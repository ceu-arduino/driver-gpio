#include "../../gpio.ceu"

input int AVR_PIN;

{
    // sense CHANGEs for both INT0/INT1
    EICRA = (CHANGE << ISC10) | (CHANGE << ISC00);

    // https://arduino.stackexchange.com/questions/1784/how-many-interrupt-pins-can-an-uno-handle
    // pin change interrupt (example for D4)
    bitSet(PCMSK2, PCINT20);  // want pin 4
    bitSet(PCIFR,  PCIF2);    // clear any outstanding interrupts
}

code/await Pin (var int pin) -> high/low do
    //_pinMode(pin, _INPUT_PULLDOWN);
    _pinMode(pin, _INPUT_PULLUP);
    if pin == 2 then
        { bitSet(EIMSK, INT0); }
    else/if pin == 3 then
        { bitSet(EIMSK, INT1); }
    else/if pin == 4 then
        { bitSet(PCICR, PCIE2); }
    else
        _ceu_assert(0, "pin not supported");
    end
    var int pin_ = await AVR_PIN until (pin_ == pin);
    escape _digitalRead(pin);
end

native/const _INT0_vect;
spawn async/isr [_INT0_vect] do
    { bitClear(EIMSK, INT0); }
    emit AVR_PIN(2);
end

native/const _INT1_vect;
spawn async/isr [_INT1_vect] do
    { bitClear(EIMSK, INT1); }
    emit AVR_PIN(3);
end

native/const _PCINT2_vect;
spawn async/isr [_PCINT2_vect] do
    { bitClear(PCICR, PCIE2); }
    emit AVR_PIN(4);
end
